

name: Java Maven Build & Publish Artifact

on:
  push:
    branches: [ "main" ]

jobs:
  build_test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml

  publish-job:
    runs-on: ubuntu-latest
    needs: build_test
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
    - run: mvn --batch-mode --update-snapshots verify
    - run: mkdir stag && cp target/*.jar stag
    - uses: actions/upload-artifact@v3
      with:
        name: Package
        path: stag


  docker-build-push:
    runs-on: ubuntu-latest
    needs: publish-job
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Log in to Docker Hub
      run: |
        echo ${{ secrets.DOCKERPWD }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
    - name: Build and push Docker image
      run: |
        docker build -t shankarc1625/gs-maven-nov6:latest .
        docker push shankarc1625/gs-maven-nov6:latest

  # ecr-push:
  #   runs-on: ubuntu-latest
  #   needs: docker-build-push
  #   steps:
  #   - name: Configure AWS credentials
  #     run: |
  #       aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
  #       aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #       aws configure set default.region us-east-1
  #   - name: Authenticate Docker to ECR
  #     run: |
  #       aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 476185633844.dkr.ecr.us-east-1.amazonaws.com
  #   - name: Tag Docker image for ECR
  #     run: |
  #       docker tag shankarc1625/gs-maven-nov6:latest 476185633844.dkr.ecr.us-east-1.amazonaws.com/dockerecr:latest
  #   - name: Push Docker image to ECR
  #     run: |
  #       docker push 476185633844.dkr.ecr.us-east-1.amazonaws.com/dockerecr:latest

  
  create-ecr:
    runs-on: ubuntu-latest
    needs: docker-build-push
    steps:
      - name: Configure AWS credentials
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set default.region us-east-1

      # - name: Create ECR Repository
      #   run: |
      #     aws ecr create-repository --repository-name my-app


      - name: Check if ECR Repository Exists
        run: |
          REPO_NAME="my-app4"  # Set the repository name you want to check/create
          if aws ecr describe-repositories --repository-names "$REPO_NAME" &>/dev/null; then
            echo "ECR repository $REPO_NAME already exists."
          else
            echo "ECR repository $REPO_NAME does not exist. Creating..."
            aws ecr create-repository --repository-name "$REPO_NAME"
          fi

  # ecr-push:
  #   runs-on: ubuntu-latest
  #   needs: create-ecr
  #   steps:
  #     - name: Configure AWS credentials
  #       run: |
  #         aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #         aws configure set default.region us-east-1

  #     - name: Authenticate Docker to ECR
  #       run: |
  #         aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 476185633844.dkr.ecr.us-east-1.amazonaws.com

  #     - name: Tag Docker image for ECR
  #       run: |
  #         docker tag shankarc1625/gs-maven-nov6:latest 476185633844.dkr.ecr.us-east-1.amazonaws.com/my-app2:latest

  #     - name: Push Docker image to ECR
  #       run: |
  #         docker push 476185633844.dkr.ecr.us-east-1.amazonaws.com/my-app2:latest


  ecr-push:
    runs-on: ubuntu-latest
    needs: create-ecr
    steps:
      - name: Set Docker Context
        run: docker context use default

      - name: Pull Docker Image
        run: docker pull shankarc1625/gs-maven-nov6:latest

      - name: Configure AWS credentials
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set default.region us-east-1

      - name: Authenticate Docker to ECR
        run: |
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 476185633844.dkr.ecr.us-east-1.amazonaws.com

      - name: Tag Docker image for ECR
        run: |
          docker tag shankarc1625/gs-maven-nov6:latest 476185633844.dkr.ecr.us-east-1.amazonaws.com/my-app4:latest

      - name: Push Docker image to ECR
        run: |
          docker push 476185633844.dkr.ecr.us-east-1.amazonaws.com/my-app4:latest

      # - name: Push Docker image to ECR with Retries
      #   run: |
      #     for _ in {1..5}; do
      #       docker push 476185633844.dkr.ecr.us-east-1.amazonaws.com/my-app4:latest && break
      #       sleep 10
      #     done